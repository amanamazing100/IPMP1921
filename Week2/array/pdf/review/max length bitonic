int bitonic(int arr[], int n)
{
	int inc[n], dec[n];
	//create inc array, length of non dec array ending at num 
	//inv len, while arr[i-1]<=arr[i]
	int len=1;
	inc[0]=1;
	for(int i=1;i<n;i++){
		if(arr[i]>=arr[i-1]){
			len++;
			inc[i]=len;
			continue;
		}
		len=1;
		inc[i]=len;
	}
	len=1;
	dec[n-1]=1;
	for(int i=n-2;i>=0;i--){
		if(arr[i+1]<=arr[i]){
			len++;
			dec[i]=len;
			continue;
		}
		len=1;
		dec[i]=len;
	}
	int ma=0;
	for(int i=0;i<n;i++){
		ma=max(inc[i]+dec[i]-1, ma);
	}
	return ma;
}
